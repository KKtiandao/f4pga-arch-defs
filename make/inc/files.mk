ifeq (,$(INC_FILES_MK))
INC_FILES_MK := 1

FILES_EXISTING := $(sort $(abspath $(shell $(TOP_DIR)/utils/listfiles.py)))

glob2regex = $(subst [^/]*[^/]*,.*,$(subst *,[^/]*,$(subst .,\.,$(1))))$$

# Find files in a list.
define _find_files_in
$(file >$(3))$(foreach O,$(2),$(file >>$(3),$(O)))
$(shell grep -r '$(call glob2regex,$(1))' $(3))
$(shell rm $(3))
endef

find_files_in = $(sort $(strip $(call _find_files_in,$(1),$(2),$(shell mktemp))))
#$(file >.files)$(foreach O,$(2),$(file >>.files,$(O)))$(shell grep -r '$(call glob2regex,$(1))' .files)))
#find_files_in = $(sort $(shell ( $(foreach O,$(2),printf "%s\n" $(O);) ) | grep -r '$(call glob2regex,$(1))' -))

# Tools which generate files should append their files to this variable.
FILES_GENERATED :=
find_generated_files = $(call find_files_in,$(1),$(FILES_GENERATED))

define _add_generated_files
FILES_GENERATED := $$(sort $$(abspath $$(FILES_GENERATED) $(1)))
endef
add_generated_files = $(eval $(call _add_generated_files,$(1)))

# Tools which have template files should append their files to this variable
FILES_TEMPLATES :=

define _add_template_files
FILES_TEMPLATES := $$(sort $$(abspath $$(FILES_TEMPLATES) $(1)))
endef
add_template_files = $(eval $(call _add_template_files,$(1)))

# Find files, including those files which are generated by other stages but
# might not exist yet.
FILES_POSSIBLE=$(FILES_EXISTING) $(sort $(abspath $(FILES_GENERATED)))
find_files = $(call find_files_in,$(1),$(FILES_POSSIBLE))

# Find only files which are not generated.
FILES_NON_GENERATED=$(filter-out $(FILES_GENERATED),$(FILES_EXISTING))
find_nongenerated_files = $(call find_files_in,$(1),$(FILES_NON_GENERATED))

# Find all files, except those being used as templates for generating other
# files.
FILES_NON_TEMPLATES=$(filter-out $(sort $(abspath $(FILES_TEMPLATES))),$(FILES_POSSIBLE))
find_nontemplate_files = $(call find_files_in,$(1),$(FILES_NON_TEMPLATES))

ifeq (1,$(V))
$(info Found $(words $(FILES_EXISTING)) files currently existing.)
endif

ifeq (0,$(words $(FILES_EXISTING)))
$(error Found no files! Check the exclude patterns!)
endif

files:
	@$(foreach O,$(call find_files,$(FILTER_BELOW)),$(info $(subst $(FILTER_STRIP),,$(O))))
	@true

.PHONY: files

endif
